package concurrente;

public class Ej7{

    // Clase interna para crear un hilo que imprime un mensaje con un delay
   private static class HiloMensaje extends Thread {
        private String mensaje;
        private int repeticiones;
        private int delay;

        public HiloMensaje(String mensaje, int repeticiones, int delay) {
            this.mensaje = mensaje;
            this.repeticiones = repeticiones;
            this.delay = delay;
        }

        @Override
        public void run() {
            for (int i = 0; i < repeticiones; i++) {
                System.out.println("Mensaje Recibido: " + mensaje);
                try {
                    Thread.sleep(delay); // Pausa entre mensajes
                } catch (InterruptedException e) {
                    System.err.println("El hilo fue interrumpido");
                }
            }
        }
    }

    public static void main(String[] args) throws InterruptedException {
        int k = 5; // NÃºmero de repeticiones

        // Crear hilos con diferentes delays
        HiloMensaje hiloPing = new HiloMensaje("Ping", k, 500); // 500 ms delay
        HiloMensaje hiloPong = new HiloMensaje("Pong", k, 800); // 800 ms delay

        // Iniciar los hilos
        hiloPing.start();
        hiloPong.start();
    }
}
